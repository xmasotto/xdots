#!/bin/bash

if [ $# -ne 2 ]; then
    echo "Usage: ./compare_repos OLD_DIR NEW_DIR"
fi

old_dir=$1
new_dir=$2

(cd $old_dir && find . -type f) > tmp_find_old
(cd $new_dir && find . -type f) > tmp_find_new

function diffout {
    diff tmp_find_old tmp_find_new
}

function process {
    # Moved/Deleted Files
    for f in `diffout | sed -n 's/^< \(.*\)$/\1/gp'`; do
	pattern="/`basename $f`$"
	new_path="`grep "$pattern" tmp_find_new`"
	if [ "$new_path" ]; then
	    sed -ni '\_'$pattern'_!p' tmp_find_new
	    echo "MOVE $f $new_path"
	else
	    echo "DELETE $f"
	fi
    done

    # Added Files
    for f in `diffout | sed -n 's/^> \(.*\)$/\1/gp'`; do
	echo "ADD $f"
    done

    # Updated Files
    for f in `cat tmp_find_old`; do
	echo $old_dir/$f $new_dir/$f
	if [[ -f $old_dir/$f && -f $new_dir/$f && "`diff $old_dir/$f $new_dir/$f`" ]]; then
	    echo "UPDATE $f"
	fi
    done
}

process > tmp_process_out

cat tmp_process_out | grep "^ADD" | (while read -r line; do
    f=`echo $line | cut -d' ' -f2`
    echo "Added file $f"
done)

cat tmp_process_out | grep "^MOVE" | (while read -r line; do
    f1=`echo $line | cut -d' ' -f2`
    f2=`echo $line | cut -d' ' -f3`
    echo "Moved file from $f1 to $f2"
done)

cat tmp_process_out | grep "^DELETE" | (while read -r line; do
    f=`echo $line | cut -d' ' -f2`
    echo "Deleted file $f"
done)

cat tmp_process_out | grep "^UPDATE" | (while read -r line; do
    f=`echo $line | cut -d' ' -f2`
    echo "Updated file $f"
done)

rm tmp_find_old
rm tmp_find_new
rm tmp_process_out